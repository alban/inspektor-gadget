# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import gadgettracermanager_pb2 as gadgettracermanager__pb2


class GadgetTracerManagerStub(object):
    """Methods called by bcc scripts
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddTracer = channel.unary_unary(
                '/gadgettracermanager.GadgetTracerManager/AddTracer',
                request_serializer=gadgettracermanager__pb2.AddTracerRequest.SerializeToString,
                response_deserializer=gadgettracermanager__pb2.TracerID.FromString,
                )
        self.RemoveTracer = channel.unary_unary(
                '/gadgettracermanager.GadgetTracerManager/RemoveTracer',
                request_serializer=gadgettracermanager__pb2.TracerID.SerializeToString,
                response_deserializer=gadgettracermanager__pb2.RemoveTracerResponse.FromString,
                )
        self.AddContainer = channel.unary_unary(
                '/gadgettracermanager.GadgetTracerManager/AddContainer',
                request_serializer=gadgettracermanager__pb2.ContainerDefinition.SerializeToString,
                response_deserializer=gadgettracermanager__pb2.AddContainerResponse.FromString,
                )
        self.RemoveContainer = channel.unary_unary(
                '/gadgettracermanager.GadgetTracerManager/RemoveContainer',
                request_serializer=gadgettracermanager__pb2.ContainerDefinition.SerializeToString,
                response_deserializer=gadgettracermanager__pb2.RemoveContainerResponse.FromString,
                )
        self.GetContainerByMntNs = channel.unary_unary(
                '/gadgettracermanager.GadgetTracerManager/GetContainerByMntNs',
                request_serializer=gadgettracermanager__pb2.GetContainerByMntNsRequest.SerializeToString,
                response_deserializer=gadgettracermanager__pb2.GetContainerByMntNsResponse.FromString,
                )
        self.DumpState = channel.unary_unary(
                '/gadgettracermanager.GadgetTracerManager/DumpState',
                request_serializer=gadgettracermanager__pb2.DumpStateRequest.SerializeToString,
                response_deserializer=gadgettracermanager__pb2.Dump.FromString,
                )


class GadgetTracerManagerServicer(object):
    """Methods called by bcc scripts
    """

    def AddTracer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveTracer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddContainer(self, request, context):
        """Methods called by OCI Hooks

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveContainer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContainerByMntNs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DumpState(self, request, context):
        """Methods called for debugging

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GadgetTracerManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddTracer': grpc.unary_unary_rpc_method_handler(
                    servicer.AddTracer,
                    request_deserializer=gadgettracermanager__pb2.AddTracerRequest.FromString,
                    response_serializer=gadgettracermanager__pb2.TracerID.SerializeToString,
            ),
            'RemoveTracer': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveTracer,
                    request_deserializer=gadgettracermanager__pb2.TracerID.FromString,
                    response_serializer=gadgettracermanager__pb2.RemoveTracerResponse.SerializeToString,
            ),
            'AddContainer': grpc.unary_unary_rpc_method_handler(
                    servicer.AddContainer,
                    request_deserializer=gadgettracermanager__pb2.ContainerDefinition.FromString,
                    response_serializer=gadgettracermanager__pb2.AddContainerResponse.SerializeToString,
            ),
            'RemoveContainer': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveContainer,
                    request_deserializer=gadgettracermanager__pb2.ContainerDefinition.FromString,
                    response_serializer=gadgettracermanager__pb2.RemoveContainerResponse.SerializeToString,
            ),
            'GetContainerByMntNs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContainerByMntNs,
                    request_deserializer=gadgettracermanager__pb2.GetContainerByMntNsRequest.FromString,
                    response_serializer=gadgettracermanager__pb2.GetContainerByMntNsResponse.SerializeToString,
            ),
            'DumpState': grpc.unary_unary_rpc_method_handler(
                    servicer.DumpState,
                    request_deserializer=gadgettracermanager__pb2.DumpStateRequest.FromString,
                    response_serializer=gadgettracermanager__pb2.Dump.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gadgettracermanager.GadgetTracerManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GadgetTracerManager(object):
    """Methods called by bcc scripts
    """

    @staticmethod
    def AddTracer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gadgettracermanager.GadgetTracerManager/AddTracer',
            gadgettracermanager__pb2.AddTracerRequest.SerializeToString,
            gadgettracermanager__pb2.TracerID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveTracer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gadgettracermanager.GadgetTracerManager/RemoveTracer',
            gadgettracermanager__pb2.TracerID.SerializeToString,
            gadgettracermanager__pb2.RemoveTracerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddContainer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gadgettracermanager.GadgetTracerManager/AddContainer',
            gadgettracermanager__pb2.ContainerDefinition.SerializeToString,
            gadgettracermanager__pb2.AddContainerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveContainer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gadgettracermanager.GadgetTracerManager/RemoveContainer',
            gadgettracermanager__pb2.ContainerDefinition.SerializeToString,
            gadgettracermanager__pb2.RemoveContainerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetContainerByMntNs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gadgettracermanager.GadgetTracerManager/GetContainerByMntNs',
            gadgettracermanager__pb2.GetContainerByMntNsRequest.SerializeToString,
            gadgettracermanager__pb2.GetContainerByMntNsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DumpState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gadgettracermanager.GadgetTracerManager/DumpState',
            gadgettracermanager__pb2.DumpStateRequest.SerializeToString,
            gadgettracermanager__pb2.Dump.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
